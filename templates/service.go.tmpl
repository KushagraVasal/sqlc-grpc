// Code generated by sqlc-grpc (https://github.com/walterwanderley/sqlc-grpc).

package {{.Package}}

import (
	"context"
	"database/sql"
	"encoding/json"
	"fmt"
	"log/slog"
	"net"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5"
	"github.com/jackc/pgx/v5/pgtype"
	"github.com/jackc/pgx/v5/pgxpool"
	"google.golang.org/protobuf/types/known/timestamppb"
	"google.golang.org/protobuf/types/known/wrapperspb"

	pb "{{ .GoModule}}/api/{{.Package}}/v1"
	"{{.GoModule}}/internal/validation"
)

{{$emitDbArgument := .EmitDbArgument}}

{{range .CustomServiceFunctions}}{{ .}}
{{end}}

{{ range .Services }}
{{ range .Comments }}
// {{ . }}{{ end }}
func (s *Service) {{.Name | UpperFirstCharacter}}(ctx context.Context, req *pb.{{.Name  | UpperFirstCharacter}}Request) (*pb.{{.Name | UpperFirstCharacter}}Response, error) {
	{{ range . | Input}}{{ .}}
	{{end}}
	{{if not .IsBlank}}
	{{if not .EmptyOutput}}result, {{end}}err := s.querier.{{ .Name}}(ctx{{if $emitDbArgument}}, s.db{{end}}{{ .ParamsCallDatabase}})
	if err != nil {
		slog.ErrorContext(ctx,"{{.Name}} sql call failed", "error", err)
		return nil, err
	}
	{{end}}
	{{ range . | Output}}{{ .}}
	{{end -}}
}
{{ end }}